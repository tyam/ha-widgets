

$px1: 0.0625 * $rem;

.haw--raised-1 {
    box-shadow: 0 $px1 (3 * $px1) rgba(#000, 0.12),
                0 $px1 (2 * $px1) rgba(#000, 0.24);
}
.haw--raised-2 {
    box-shadow: 0 (3 * $px1) (6 * $px1) rgba(#000, 0.16),
                0 (3 * $px1) (6 * $px1) rgba(#000, 0.23);
} 
.haw--raised-3 {
    box-shadow: 0 (10 * $px1) (20 * $px1) rgba(#000, 0.19),
                0 (6 * $px1) (6 * $px1) rgba(#000, 0.23);
}
.haw--raised-4 {
    box-shadow: 0 (14 * $px1) (28 * $px1) rgba(#000, 0.25),
                0 (10 * $px1) (10 * $px1) rgba(#000, 0.22);
}
.haw--raised-5 {
    box-shadow: 0 (19 * $px1) (38 * $px1) rgba(#000, 0.30),
                0 (15 * $px1) (12 * $px1) rgba(#000, 0.22);
}

@mixin gutter($axis, $num, $dire, $val) {
    &.-g#{$axis}-#{$num} > *:not(:last-child) { margin-#{$dire}: $val; }
}
@mixin margin($axis, $num, $dire1, $dire2, $val) {
    &.-m#{$axis}-#{$num} > *:first-child { margin-#{$dire1}: $val; }
    &.-m#{$axis}-#{$num} > *:last-child { margin-#{$dire2}: $val; }
}
@mixin margin-all($axis, $num, $dire1, $dire2, $val) {
    &.-m#{$axis}-#{$num} > * {
        margin-#{$dire1}: $val;
        margin-#{$dire2}: $val;
        & > .hw--m0 {
            margin-#{$dire1}: -1 * $val;
            margin-#{$dire2}: -1 * $val;
            width: calc(100% + #{2 * $val});
        }
    }
}

.hw-h-layout {
    @include gutter(x, 1, right, $m1);
    @include gutter(x, 2, right, $m2);
    @include gutter(x, 3, right, $m3);
    @include gutter(x, 4, right, $m4);
    @include gutter(x, 5, right, $m5);
    @include margin(x, 1, left, right, $m1);
    @include margin(x, 2, left, right, $m2);
    @include margin(x, 3, left, right, $m3);
    @include margin(x, 4, left, right, $m4);
    @include margin(x, 5, left, right, $m5);
    @include margin-all(y, 1, top, bottom, $m1);
    @include margin-all(y, 2, top, bottom, $m2);
    @include margin-all(y, 3, top, bottom, $m3);
    @include margin-all(y, 4, top, bottom, $m4);
    @include margin-all(y, 5, top, bottom, $m5);
}

.hw-v-layout {
    @include gutter(y, 1, bottom, $m1);
    @include gutter(y, 2, bottom, $m2);
    @include gutter(y, 3, bottom, $m3);
    @include gutter(y, 4, bottom, $m4);
    @include gutter(y, 5, bottom, $m5);
    @include margin(y, 1, top, bottom, $m1);
    @include margin(y, 2, top, bottom, $m2);
    @include margin(y, 3, top, bottom, $m3);
    @include margin(y, 4, top, bottom, $m4);
    @include margin(y, 5, top, bottom, $m5);
    @include margin-all(x, 1, left, right, $m1);
    @include margin-all(x, 2, left, right, $m2);
    @include margin-all(x, 3, left, right, $m3);
    @include margin-all(x, 4, left, right, $m4);
    @include margin-all(x, 5, left, right, $m5);
}


@mixin emittable() {
    position: relative;
    overflow: hidden;
    &.-emitted::after {
        display: block;
        content: "";
        position: absolute;
        left: 0;
        top: 0;
        bottom: 0;
        width: 30rem;
        background-color: fore12();
        opacity: 0;
        transform: scaleX(0);
        animation: wave 0.4s linear 0s 1 normal forwards running;
        transform-origin: left top;
        will-change: transform, opacity;
    }
}

@keyframes wave {
    0% { transform: scaleX(0); opacity: 0; }
    0.1% { transform: scaleX(0.01); opacity: 1; }
    40% { transform: scaleX(1); opacity: 1; }
    65% { transform: scaleX(3); opacity: 1; }
    99.9% { transform: scaleX(3); opacity: 0; }
    100% { transform: scaleX(0); opacity: 0; }
}


@mixin when-wider($bp) {
    @media screen and (min-width: $bp) {
        @content;
    }
}
@mixin when-between($minbp, $maxbp) {
    @media screen and (min-width: $minbp) and (max-width: $maxbp) {
        @content;
    }
}

@mixin gutx($n) {
    &:not(.-noedge) > *:not(.haw--nogut):first-child { margin-left: $n; }
    &:not(.-noedge) > *:not(.haw--nogut):last-child { margin-right: $n; }
    & > *:not(.haw--nogut) { margin-right: $n; }
}
@mixin gutyall($n) {
    & > *:not(.haw--nogut) { margin-top: $n; margin-bottom: $n; }
}
@mixin guty($n) {
    &:not(.-noedge) > *:not(.haw--nogut):first-child { margin-top: $n; }
    &:not(.-noedge) > *:not(.haw--nogut):last-child { margin-bottom: $n; }
    & > *:not(.haw--nogut) { margin-bottom: $n; }
}
@mixin gutxall($n) {
    & > *:not(.haw--nogut) { margin-left: $n; margin-right: $n; }
}

.haw-ie11-workaround {
    display: flex;
    flex-direction: row;
}

.haw-component {
    display: block;
    flex: 0 0 auto;
    margin: 0;
    padding: 0;
    width: auto;
    height: auto;
    &.-growable {
        flex-grow: 1;
        flex-shrink: 1;
        flex-basis: 0;
        .haw-vbox > & {
            min-height: 0;
        }
        .haw-hbox > & {
            min-width: 0;
        }
    }
    &.-align-start {
        align-self: flex-start;
    }
    &.-align-end {
        align-self: flex-end;
    }
    &.-align-center {
        align-self: center;
    }
    &.-align-stretch {
        align-self: stretch;
    }
}
.haw--mt-0 { margin-top: 0 !important; }
.haw--mt-1 { margin-top: $m1 !important; }
.haw--mt-2 { margin-top: $m2 !important; }
.haw--mt-3 { margin-top: $m3 !important; }
.haw--mt-4 { margin-top: $m4 !important; }
.haw--mt-5 { margin-top: $m5 !important; }
.haw--mb-0 { margin-bottom: 0 !important; }
.haw--mb-1 { margin-bottom: $m1 !important; }
.haw--mb-2 { margin-bottom: $m2 !important; }
.haw--mb-3 { margin-bottom: $m3 !important; }
.haw--mb-4 { margin-bottom: $m4 !important; }
.haw--mb-5 { margin-bottom: $m5 !important; }
.haw--ml-0 { margin-left: 0 !important; }
.haw--ml-1 { margin-left: $m1 !important; }
.haw--ml-2 { margin-left: $m2 !important; }
.haw--ml-3 { margin-left: $m3 !important; }
.haw--ml-4 { margin-left: $m4 !important; }
.haw--ml-5 { margin-left: $m5 !important; }
.haw--mr-0 { margin-right: 0 !important; }
.haw--mr-1 { margin-right: $m1 !important; }
.haw--mr-2 { margin-right: $m2 !important; }
.haw--mr-3 { margin-right: $m3 !important; }
.haw--mr-4 { margin-right: $m4 !important; }
.haw--mr-5 { margin-right: $m5 !important; }

.haw-layout {
    @extend .haw-component;
    display: flex;
    justify-content: flex-start;
    flex-wrap: nowrap;
    align-items: stretch;
    &.-justify-start {
        justify-content: flex-start;
    }
    &.-justify-end {
        justify-content: flex-end;
    }
    &.-justify-center {
        justify-content: center;
    }
    &.-justify-space-between {
        justify-content: space-between;
    }
    &.-justify-space-around {
        justify-content: space-around;
    }
    &.-align-items-start {
        align-items: flex-start;
    }
    &.-align-items-end {
        align-items: flex-end;
    }
    &.-align-items-center {
        align-items: center;
    }
    &.-align-items-stretch {
        align-items: stretch;
    }
}